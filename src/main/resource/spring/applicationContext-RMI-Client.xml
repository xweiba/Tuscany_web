<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!-- 使用github https://github.com/winsnlife/cluster4spring 项目-->
    <!-- 负载均衡 RMI -->
    <bean id="rmiClientSetting" abstract="true">
        <!-- 是否启动时加载stub -->
        <property name="refreshEndpointsOnStartup" value="false" />
        <!-- 调用异常时，将重新加载stub -->
        <property name="refreshEndpointsOnConnectFailure" value="true" />
        <!-- 调用失败时是否切换到其他服务端 -->
        <property name="switchEndpointOnFailure" value="true" />
        <!-- 追踪拦截器启用 -->
        <property name="registerTraceInterceptor" value="true" />
        <!-- 缓存stub 继承AbstractRmiShortFormProxyFactoryBean才有-->
        <property name="cacheEndpoints" value="true" />
    </bean>

    <!-- 数据层 DAO -->
    <bean id="serverDao"
          class="org.softamis.cluster4spring.rmi.RmiUrlListProxyFactoryBean" parent="rmiClientSetting">
        <!-- 远程服务对象接口类 -->
        <property name="serviceInterface" value="com.jnshu.service.ServiceDao"/>
        <!-- 远程对象地址list ，如果第一个无法使用，会抛异常，然后使用第二个去调用远程对象方法返回结果-->
        <property name="serviceURLs">
            <list>
                <value>rmi://45.76.214.173:9090/serverDao</value>
                <value>rmi://45.76.214.173:9091/serverDao</value>
            </list>
        </property>
        <!-- 调用时选择那个url的策略 -->
        <property name="endpointSelectionPolicy">
            <bean class="org.softamis.cluster4spring.support.invocation.ShuffleEndpointSelectionPolicy"/>
        </property>
    </bean>
    <!-- OSS 阿里云 -->
    <bean id="serverALiYunOSS"
          class="org.softamis.cluster4spring.rmi.RmiUrlListProxyFactoryBean" parent="rmiClientSetting">
        <!-- 远程服务对象接口类 -->
        <property name="serviceInterface" value="com.jnshu.service.ServiceOSS"/>
        <!-- 远程对象地址list ，如果第一个无法使用，会抛异常，然后使用第二个去调用远程对象方法返回结果-->
        <property name="serviceURLs">
            <list>
                <value>rmi://45.76.214.173:9090/serverALiYunOSS</value>
                <value>rmi://45.76.214.173:9091/serverALiYunOSS</value>
            </list>
        </property>
        <!-- 调用时选择那个url的策略 -->
        <property name="endpointSelectionPolicy">
            <bean class="org.softamis.cluster4spring.support.invocation.ShuffleEndpointSelectionPolicy"/>
        </property>
    </bean>
    <!-- OSS 七牛云 -->
    <bean id="serverQiNiuYunOSS"
          class="org.softamis.cluster4spring.rmi.RmiUrlListProxyFactoryBean" parent="rmiClientSetting">
        <!-- 远程服务对象接口类 -->
        <property name="serviceInterface" value="com.jnshu.service.ServiceOSS"/>
        <!-- 远程对象地址list ，如果第一个无法使用，会抛异常，然后使用第二个去调用远程对象方法返回结果-->
        <property name="serviceURLs">
            <list>
                <value>rmi://45.76.214.173:9090/serverQiNiuYunOSS</value>
                <value>rmi://45.76.214.173:9090/serverQiNiuYunOSS</value>
            </list>
        </property>
        <!-- 调用时选择那个url的策略 -->
        <property name="endpointSelectionPolicy">
            <bean class="org.softamis.cluster4spring.support.invocation.ShuffleEndpointSelectionPolicy"/>
        </property>
    </bean>
    <!-- SMS 容联短信 -->
    <bean id="serverSMSRLian"
          class="org.softamis.cluster4spring.rmi.RmiUrlListProxyFactoryBean" parent="rmiClientSetting">
        <!-- 远程服务对象接口类 -->
        <property name="serviceInterface" value="com.jnshu.service.ServiceSMS"/>
        <!-- 远程对象地址list ，如果第一个无法使用，会抛异常，然后使用第二个去调用远程对象方法返回结果-->
        <property name="serviceURLs">
            <list>
                <value>rmi://45.76.214.173:9090/serverSMSRLian</value>
                <value>rmi://45.76.214.173:9091/serverSMSRLian</value>
            </list>
        </property>
        <!-- 调用时选择那个url的策略 -->
        <property name="endpointSelectionPolicy">
            <bean class="org.softamis.cluster4spring.support.invocation.ShuffleEndpointSelectionPolicy"/>
        </property>
    </bean>

    <!-- Mail SendCloudMail -->
    <bean id="serverMailSendCloud"
          class="org.softamis.cluster4spring.rmi.RmiUrlListProxyFactoryBean" parent="rmiClientSetting">
        <!-- 远程服务对象接口类 -->
        <property name="serviceInterface" value="com.jnshu.service.ServiceMail"/>
        <!-- 远程对象地址list ，如果第一个无法使用，会抛异常，然后使用第二个去调用远程对象方法返回结果-->
        <property name="serviceURLs">
            <list>
                <value>rmi://45.76.214.173:9090/serverMailSendCloud</value>
                <value>rmi://45.76.214.173:9091/serverMailSendCloud</value>
            </list>
        </property>
        <!-- 调用时选择那个url的策略 -->
        <property name="endpointSelectionPolicy">
            <bean class="org.softamis.cluster4spring.support.invocation.ShuffleEndpointSelectionPolicy"/>
        </property>
    </bean>
    <!-- Memcached 缓存-->
    <bean id="serverCachedMem"
          class="org.softamis.cluster4spring.rmi.RmiUrlListProxyFactoryBean" parent="rmiClientSetting">
        <!-- 远程服务对象接口类 -->
        <property name="serviceInterface" value="com.jnshu.service.ServiceCache"/>
        <!-- 远程对象地址list ，如果第一个无法使用，会抛异常，然后使用第二个去调用远程对象方法返回结果-->
        <property name="serviceURLs">
            <list>
                <value>rmi://45.76.214.173:9090/serverCachedMem</value>
                <value>rmi://45.76.214.173:9091/serverCachedMem</value>
            </list>
        </property>
        <!-- 调用时选择那个url的策略 -->
        <property name="endpointSelectionPolicy">
            <bean class="org.softamis.cluster4spring.support.invocation.ShuffleEndpointSelectionPolicy"/>
        </property>
    </bean>
</beans>